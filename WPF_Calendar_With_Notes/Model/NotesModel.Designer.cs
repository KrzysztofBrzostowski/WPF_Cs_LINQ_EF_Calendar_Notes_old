//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace WPF_Calendar_With_Notes.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class NotesEntities1 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new NotesEntities1 object using the connection string found in the 'NotesEntities1' section of the application configuration file.
        /// </summary>
        public NotesEntities1() : base("name=NotesEntities1", "NotesEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NotesEntities1 object.
        /// </summary>
        public NotesEntities1(string connectionString) : base(connectionString, "NotesEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NotesEntities1 object.
        /// </summary>
        public NotesEntities1(EntityConnection connection) : base(connection, "NotesEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Note> Notes
        {
            get
            {
                if ((_Notes == null))
                {
                    _Notes = base.CreateObjectSet<Note>("Notes");
                }
                return _Notes;
            }
        }
        private ObjectSet<Note> _Notes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Notes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotes(Note note)
        {
            base.AddObject("Notes", note);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NotesModel", Name="Note")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Note : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Note object.
        /// </summary>
        /// <param name="note_Id">Initial value of the Note_Id property.</param>
        /// <param name="note_DateTime">Initial value of the Note_DateTime property.</param>
        public static Note CreateNote(global::System.Guid note_Id, global::System.DateTime note_DateTime)
        {
            Note note = new Note();
            note.Note_Id = note_Id;
            note.Note_DateTime = note_DateTime;
            return note;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Note_Id
        {
            get
            {
                return _Note_Id;
            }
            set
            {
                if (_Note_Id != value)
                {
                    OnNote_IdChanging(value);
                    ReportPropertyChanging("Note_Id");
                    _Note_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Note_Id");
                    OnNote_IdChanged();
                }
            }
        }
        private global::System.Guid _Note_Id;
        partial void OnNote_IdChanging(global::System.Guid value);
        partial void OnNote_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Note_DateTime
        {
            get
            {
                return _Note_DateTime;
            }
            set
            {
                OnNote_DateTimeChanging(value);
                ReportPropertyChanging("Note_DateTime");
                _Note_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Note_DateTime");
                OnNote_DateTimeChanged();
            }
        }
        private global::System.DateTime _Note_DateTime;
        partial void OnNote_DateTimeChanging(global::System.DateTime value);
        partial void OnNote_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note_String
        {
            get
            {
                return _Note_String;
            }
            set
            {
                OnNote_StringChanging(value);
                ReportPropertyChanging("Note_String");
                _Note_String = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note_String");
                OnNote_StringChanged();
            }
        }
        private global::System.String _Note_String;
        partial void OnNote_StringChanging(global::System.String value);
        partial void OnNote_StringChanged();

        #endregion

    
    }

    #endregion

    
}
